
package eventsystem.Ventanas.JInternas;


import eventsystem.Ventanas.Login;
import java.awt.Color;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author YoelTorres
 */
public class EventosCrear extends javax.swing.JInternalFrame {

    /**
     * Creates new form EventosCrear
     */
    
    DefaultListModel ListaM = new DefaultListModel();
     DefaultListModel ListaG = new DefaultListModel();
     DefaultListModel ListaE = new DefaultListModel();
     DefaultListModel ListaOM = new DefaultListModel(); //Es una lista oculta para guardar los id de las personas
     DefaultListModel ListaOG = new DefaultListModel(); //Es una lista oculta para guardar los id de los grupos
    Vector<String> OcultosMiembros,OcultosGrupos;
    
    Boolean GrupoUsado=false; //Variable para verificar si algun grupo fue asignado para notificar

    public EventosCrear() {
        
        initComponents();
        ListaMiembros.setModel(ListaM);
        ListaGrupos.setModel(ListaG);
        ListaEnvios.setModel(ListaE);
        OcultosMiembros = new Vector<String>(); //Este vector guardar todos los id seleccionados de los miembros-
        OcultosGrupos = new Vector<String>(); //Este vector guardar todos los id seleccionados de los grupos

        
        
        limpiar();
        
       
        
    }
    
    public void CargarPalabras(){
         
        try{
            
               ListaE.removeAllElements();
            ListaM.removeAllElements();
            ListaG.removeAllElements();
            
            ListaOM.removeAllElements();
            ListaOG.removeAllElements();
            OcultosMiembros.clear();
            OcultosGrupos.clear();
           GrupoUsado=false;
         
                   ResultSet res =  Herramientas.Utilidades.Consulta("Select * from Miembros where CodUsuario='"+Login.GetCodUsuario()+"'");
                        while(res.next()){
                           
                            ListaM.addElement(res.getString("Nombre")+" "+res.getString("Apellido"));
                           ListaOM.addElement(res.getString("CodMiembro"));
                        }
                        
//                        
                        
                        res =  Herramientas.Utilidades.Consulta("Select * from Grupos where CodUsuario='"+Login.GetCodUsuario()+"'");
                        while(res.next()){
//                            
                            ListaG.addElement(res.getString("Nombre"));
                             ListaOG.addElement(res.getString("CodGrupo"));
                          
                        }
                        
                    


        
        }catch(Exception e){
             JOptionPane.showMessageDialog(null, "Error al conectar con la BD "+e.getMessage());
        }
    }
    
    public void limpiar(){
          
        Calendar c2 = new GregorianCalendar();
     
        DatePicker.setCalendar(c2);
        
        TxtDescripcion.setText("");
        TxtMensaje.setText("");
         GrupoUsado=false;
         ListaEnvios.setBackground(Color.decode("#FFFFFF"));
      
        TxtDescripcion.grabFocus();
        try{
            
         CargarPalabras();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error: "+e.getMessage());
        }
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        testDayPicker1 = new com.qt.datapicker.TestDayPicker();
        BtnLimpiarTodo = new javax.swing.JButton();
        BtnCerrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TxtDescripcion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtMensaje = new javax.swing.JTextArea();
        DatePicker = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaGrupos = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListaEnvios = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaMiembros = new javax.swing.JList<>();
        BtnSeleccionar2 = new javax.swing.JButton();
        BtnSeleccionar1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BtnLimpiar = new javax.swing.JButton();
        BtnCrear = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Crear Eventos");

        BtnLimpiarTodo.setText("Limpiar todo");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, BtnCerrar, org.jdesktop.beansbinding.ObjectProperty.create(), BtnLimpiarTodo, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        BtnLimpiarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiarTodoActionPerformed(evt);
            }
        });

        BtnCerrar.setText("Cerrar");
        BtnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCerrarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Descripci√≥n:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Fecha de envio:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Mensaje:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TxtMensaje, org.jdesktop.beansbinding.ObjectProperty.create(), TxtDescripcion, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        TxtMensaje.setColumns(20);
        TxtMensaje.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, BtnLimpiarTodo, org.jdesktop.beansbinding.ObjectProperty.create(), TxtMensaje, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(TxtMensaje);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TxtDescripcion, org.jdesktop.beansbinding.ObjectProperty.create(), DatePicker, org.jdesktop.beansbinding.BeanProperty.create("nextFocusableComponent"));
        bindingGroup.addBinding(binding);

        DatePicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DatePickerKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ListaGrupos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaGruposMouseClicked(evt);
            }
        });
        ListaGrupos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaGruposValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(ListaGrupos);

        jScrollPane4.setViewportView(ListaEnvios);

        ListaMiembros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaMiembrosMouseClicked(evt);
            }
        });
        ListaMiembros.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaMiembrosValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ListaMiembros);

        BtnSeleccionar2.setText("Seleccionar");
        BtnSeleccionar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSeleccionar2ActionPerformed(evt);
            }
        });

        BtnSeleccionar1.setText("Seleccionar");
        BtnSeleccionar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSeleccionar1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("Lista de grupos");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("Lista de miembros");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 255));
        jLabel6.setText("Lista de invitados");

        BtnLimpiar.setText("Limpiar");
        BtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiarActionPerformed(evt);
            }
        });

        BtnCrear.setText("Crear");
        BtnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel4)
                .addGap(90, 90, 90)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(65, 65, 65))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(BtnSeleccionar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnSeleccionar2)
                .addGap(48, 48, 48)
                .addComponent(BtnCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5))
                    .addComponent(jLabel6))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BtnLimpiar)
                        .addComponent(BtnCrear))
                    .addComponent(BtnSeleccionar1)
                    .addComponent(BtnSeleccionar2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TxtDescripcion)
                    .addComponent(jScrollPane1)
                    .addComponent(DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnLimpiarTodo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnCerrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(TxtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnLimpiarTodo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnCerrar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCrearActionPerformed

        if(TxtDescripcion.getText().equals("") || TxtMensaje.getText().equals("") ){
            JOptionPane.showMessageDialog(null,"Debe de rellenar todos los campos","Error",JOptionPane.ERROR_MESSAGE);
            TxtDescripcion.grabFocus();
        }else{
            
            if(ListaEnvios.getModel().getSize() > 0){

            try{
             
               
               
                Herramientas.Procedimientos.CrearEvento(TxtDescripcion.getText(), TxtMensaje.getText(), DatePicker.getDate(),Login.GetCodUsuario());
                
                
                //Para sacar a todos los miembros de los grupos y asignarlo al vector de los miembros
                if (GrupoUsado == true) {
//                    OcultosGrupos

                    for (String CodigoGrupo : OcultosGrupos) {

                        ResultSet res = Herramientas.Utilidades.Consulta("Select CodMiembro from GruposVsMiembros where CodGrupo='" + CodigoGrupo + "'");
                        while (res.next()) {

                            //Si ya lo contienen en la lista de miembros, pues simplemente no lo agrega, esto es para evitar que se envie mas de una vez el mensaje
                            if (!OcultosMiembros.contains(res.getString("CodMiembro"))) {
                                OcultosMiembros.add(res.getString("CodMiembro"));
                            }

                        }

                    }

                }
                
                //--- Fin de sacar miembros de los grupos
                
                try{
                    
                   
                    //Para buscar el codigo del ultimo evento registrado
                    ResultSet res = Herramientas.Utilidades.Consulta("Select Max(CodEvento) as Resultado from Eventos where CodUsuario='" + Login.GetCodUsuario() + "'");

                    res.next();
                    String CodEvento = res.getString("Resultado");

                    for (String CodigoMiembro : OcultosMiembros) {
                        Herramientas.Procedimientos.InsertarEventosVsMiembros(CodEvento, CodigoMiembro);

                    }

               
                }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error: "+e.getMessage());
                }
                
            
                
                
                JOptionPane.showMessageDialog(null,"Se ha creado el evento correctamente.","Aviso",JOptionPane.INFORMATION_MESSAGE);
                   limpiar();
                 
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error al conectar con la BD "+e.getMessage());
            }
            }else{
                JOptionPane.showMessageDialog(null, "Debe de seleccionar al menos un invitado, a quien deseas enviar este evento.","Error",JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_BtnCrearActionPerformed

    private void BtnLimpiarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiarTodoActionPerformed
        
        limpiar();
      
    }//GEN-LAST:event_BtnLimpiarTodoActionPerformed

    private void BtnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_BtnCerrarActionPerformed

   
    
    private void BtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiarActionPerformed
        try{
            
      ListaEnvios.setBackground(Color.decode("#FFFFFF"));
         CargarPalabras();
        }catch(Exception e){
          
        }
    }//GEN-LAST:event_BtnLimpiarActionPerformed

    private void BtnSeleccionar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSeleccionar1ActionPerformed

        try{

            int c = ListaMiembros.getSelectedIndex();

            String elemento = (String) ListaMiembros.getSelectedValue();
            ListaE.addElement(elemento);

            OcultosMiembros.add(ListaOM.getElementAt(c).toString());
            ListaEnvios.setBackground(Color.decode("#819FF7"));

            ListaOM.remove(c);
            ListaM.remove(c);

        }catch(Exception e){

        }

    }//GEN-LAST:event_BtnSeleccionar1ActionPerformed

    private void BtnSeleccionar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSeleccionar2ActionPerformed
        try{

            int c = ListaGrupos.getSelectedIndex();

            String elemento = (String) ListaGrupos.getSelectedValue();
            ListaE.addElement(elemento);

            OcultosGrupos.add(ListaOG.getElementAt(c).toString());
            ListaEnvios.setBackground(Color.decode("#819FF7"));

            ListaOG.remove(c);

            ListaG.remove(c);
            GrupoUsado = true;

        }catch(Exception e){

        }

    }//GEN-LAST:event_BtnSeleccionar2ActionPerformed

    private void ListaMiembrosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaMiembrosValueChanged

    }//GEN-LAST:event_ListaMiembrosValueChanged

    private void ListaMiembrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaMiembrosMouseClicked

    }//GEN-LAST:event_ListaMiembrosMouseClicked

    private void ListaGruposValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaGruposValueChanged

    }//GEN-LAST:event_ListaGruposValueChanged

    private void ListaGruposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaGruposMouseClicked

    }//GEN-LAST:event_ListaGruposMouseClicked

    private void DatePickerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DatePickerKeyPressed
       if(evt.getKeyCode()==evt.VK_TAB){
           TxtDescripcion.requestFocus();
       }
    }//GEN-LAST:event_DatePickerKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCerrar;
    private javax.swing.JButton BtnCrear;
    private javax.swing.JButton BtnLimpiar;
    private javax.swing.JButton BtnLimpiarTodo;
    private javax.swing.JButton BtnSeleccionar1;
    private javax.swing.JButton BtnSeleccionar2;
    private com.toedter.calendar.JDateChooser DatePicker;
    private javax.swing.JList<String> ListaEnvios;
    private javax.swing.JList<String> ListaGrupos;
    private javax.swing.JList<String> ListaMiembros;
    private javax.swing.JTextField TxtDescripcion;
    private javax.swing.JTextArea TxtMensaje;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private com.qt.datapicker.TestDayPicker testDayPicker1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
